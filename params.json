{"name":"HSAT","tagline":"Hide Stuff And Things, steganography implementation in Python","body":"Hide Stuff And Things (HSAT for short) is a Steganography tool implemented in Python 2.7.6.\r\n\r\nWhat is Steganography? \r\n\r\nFrom the Wikipedia page, Steganography \"is the art or practice of concealing a message, image, or file within another message, image, or file.\" Steganography has a pretty cool history. Read more about it here: http://en.wikipedia.org/wiki/Steganography\r\n\r\nWhat are the capabilities of this tool?\r\n\r\nHSAT is currently capable of hiding a string message in an image and also retrieving this message, given the modified image.\r\nThe goal is to allow the user to take any image and any file, and be able to hide the file inside the image. The method splits up binary data and hides it in the least significant bits of each color value in each pixel of the image.\r\n\r\nWhat are the limitations of this tool?\r\n\r\nThe current implementation only allows for a text secret message to be hidden inside the image. There are complications with handling different file formats (e.g. troublesome to get a pdf file split into binary, hidden inside the image, and be able to extract the data from the image and convert it back into a pdf file)\r\n\r\nWhat features still need to be implemented?\r\n- Store a sort of file signature header in the first row of the image that includes information of the filetype etc.\r\n- Add the ability of encrypt the data before embeddeding it in the image. (and ofcourse... the ability to decrypt the message)\r\n- GUI\r\n- Better algorithms can surely be implemented (i.e. data gets embedded in sequential order, creating a very distinct pattern that is visible in the image, making it more obvious that there is a message hidden inside the image)\r\n\r\nFeel free to use/reuse my code.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}